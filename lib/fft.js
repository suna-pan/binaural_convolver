// Generated by CoffeeScript 1.10.0
(function() {
  window.fft_base = function(N, log2N, data, index, w) {
    var _k, i, index1, index2, interval, interval_h, j, k, l, m, n, o, ref, ref1, res, results, results1, tmp, w_kn;
    interval = 1;
    for (i = j = 0, ref = log2N; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      _k = 0;
      interval *= 2;
      while (_k < N) {
        w_kn = new window.Complex(1, 0);
        interval_h = interval / 2;
        for (k = l = 0, ref1 = interval_h; 0 <= ref1 ? l < ref1 : l > ref1; k = 0 <= ref1 ? ++l : --l) {
          index1 = index[(_k + k) % N];
          index2 = index[(_k + k + interval_h) % N];
          data[index2].multiply(w_kn);
          tmp = new window.Complex(data[index1].re, data[index1].im);
          data[index1].add(data[index2]);
          data[index2].minus();
          data[index2].add(tmp);
          w_kn.multiply(w[i]);
        }
        _k += interval;
      }
    }
    res = (function() {
      results = [];
      for (m = 0; m < 1024; m++){ results.push(m); }
      return results;
    }).apply(this);
    for (i = n = 0; n < 1024; i = ++n) {
      res[i] = data[index[i]];
    }
    results1 = [];
    for (i = o = 0; o < 1024; i = ++o) {
      results1.push(data[i] = res[i]);
    }
    return results1;
  };

  window.fft1024 = function(data) {
    return fft_base(1024, 10, data, window._fft_constant_index, window._fft_constant_w);
  };

  window.ifft1024 = function(data) {
    var d, i, j, len, results;
    fft_base(1024, 10, data, window._fft_constant_index, window._fft_constant_iw);
    d = new window.Complex(1024, 0);
    results = [];
    for (j = 0, len = data.length; j < len; j++) {
      i = data[j];
      results.push(i.divide(d));
    }
    return results;
  };

}).call(this);
